version: "3"

services:
  portal:
    build:
      context: .
      args:
        - service_src=./portal
      dockerfile: Dockerfile
    container_name: portal-service
    ports:
      - '3000:3000'
    restart: always
    env_file:
      - ./portal/.env 
    volumes:
      - ./portal:/usr/src/app/service:cached
      - ./common:/usr/src/app/common:cached
      - temp_files:/usr/src/app/temp_files
    depends_on:
      - mongo
      - rabbitmq
      - redis
    networks:
      - appnet

  product-consumer:
    build:
      context: .
      args:
        - service_src=./product-consumer
      dockerfile: Dockerfile
    container_name: product-consumer-service
    ports:
      - '3010:3010'
    restart: always
    env_file:
      - ./product-consumer/.env 
    volumes:
      - ./product-consumer:/usr/src/app/service:cached
      - ./common:/usr/src/app/common:cached
      - temp_files:/usr/src/app/temp_files
    depends_on:
      - mongo
      - rabbitmq
      - redis
    networks:
      - appnet

  order-consumer:
    build:
      context: .
      args:
        - service_src=./order-consumer
      dockerfile: Dockerfile
    container_name: order-consumer-service
    ports:
      - '3020:3020'
    restart: always
    env_file:
      - ./order-consumer/.env 
    volumes:
      - ./order-consumer:/usr/src/app/service:cached
      - ./common:/usr/src/app/common:cached
      - temp_files:/usr/src/app/temp_files
    depends_on:
      - mongo
      - rabbitmq
      - redis
    networks:
      - appnet

  mongo:
    image: "mongo:4.4.29"
    logging:
      driver: none
    ports:
      - 27017:27017
    volumes:
      - mongo:/data/db
    networks:
      - appnet

  rabbitmq:
    image: "rabbitmq:3.13.1-management" 
    logging:
      driver: none
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq:/var/lib/rabbitmq
    networks:
      - appnet

  redis:
    image: "redis:6.2.6"
    networks:
      - appnet
volumes:
  mongo:
  rabbitmq:
  temp_files:

networks:
  appnet:
    driver: bridge
